{"mappings":"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","sources":["node_modules/@swc/helpers/src/_array_like_to_array.js","node_modules/@swc/helpers/src/_to_consumable_array.js","node_modules/@swc/helpers/src/_array_without_holes.js","node_modules/@swc/helpers/src/_iterable_to_array.js","node_modules/@swc/helpers/src/_unsupported_iterable_to_array.js","node_modules/@swc/helpers/src/_non_iterable_spread.js","src/scripts/Lr1ParserVis.js","src/scripts/index.js"],"sourcesContent":["export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}\n","import arrayWithoutHoles from './_array_without_holes';\nimport iterableToArray from './_iterable_to_array';\nimport nonIterableSpread from './_non_iterable_spread';\nimport unsupportedIterableToArray from './_unsupported_iterable_to_array';\n\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\n","import _arrayLikeToArray from './_array_like_to_array';\n\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\n","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n","import _arrayLikeToArray from './_array_like_to_array';\n\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))\n    return _arrayLikeToArray(o, minLen);\n}\n","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n","'use strict';\r\n\r\nexport default function (document) {\r\n\r\n  // Private fields\r\n\r\n  const _startSymbol = 0;\r\n  let _symbols;\r\n  let _symbolsTerminalOffset;\r\n  let _endMarker;\r\n  let _rules;\r\n  let _collection;\r\n  let _parseTable;\r\n  let _parseTableHasConflict;\r\n  let _parseSteps;\r\n\r\n  // Private functions for parsing\r\n  \r\n  const top = stack => (\r\n    stack[stack.length - 1]\r\n  );\r\n\r\n  const itemsEqual = (i1, i2) => (\r\n    i1.rule === i2.rule && i1.position === i2.position && i1.lookahead === i2.lookahead\r\n  );\r\n\r\n  const setsEqual = (s1, s2) => {\r\n    if (s1.length !== s2.length) {\r\n      return false;\r\n    }\r\n    let v = [];\r\n    for (let state = 0; state < s1.length; ++state) {\r\n      for (let j = 0; j < s1.length; ++j) {\r\n        if (!v.includes(j) && itemsEqual(s1[state], s2[j])) {\r\n          v.push(j);\r\n        }\r\n      }\r\n    }\r\n    return v.length === s1.length;\r\n  };\r\n\r\n  const actionsEqual = (a1, a2) => {\r\n    if (a1.type !== a2.type) {\r\n      return false;\r\n    }\r\n    switch (a1.type) {\r\n      case 'accept':\r\n        return true;\r\n      case 'shift':\r\n        return a1.state === a2.state;\r\n      case 'reduce':\r\n        return a1.rule === a2.rule;\r\n      case 'conflict':\r\n        return false;\r\n    }\r\n  };\r\n\r\n  const isNonTerminal = symbol => (\r\n    symbol < _symbolsTerminalOffset && symbol > 0\r\n  );\r\n\r\n  const isTerminal = symbol => (\r\n    symbol >= _symbolsTerminalOffset && symbol < _symbols.length - 1\r\n  );\r\n\r\n  const isTerminalOrEndMarker = symbol => (\r\n    symbol >= _symbolsTerminalOffset && symbol < _symbols.length\r\n  );\r\n\r\n  const first = symbol => {\r\n    if (isTerminalOrEndMarker(symbol)) {\r\n      return [symbol];\r\n    }\r\n    let f = [];\r\n    for (let i = 0; i < _rules.length; ++i) {\r\n      if (_rules[i].lhs === symbol && _rules[i].rhs[0] !== symbol) {\r\n        let fn = first(_rules[i].rhs[0]);\r\n        for (let j = 0; j < fn.length; ++j) {\r\n          f.push(fn[j]);\r\n        }\r\n      }\r\n    }\r\n    return f;\r\n  };\r\n\r\n  const closure = set => {\r\n    let closureSet = set.slice(0);\r\n    let newItemAdded = true;\r\n    while (newItemAdded) {\r\n      newItemAdded = false;\r\n      for (let i = 0; i < closureSet.length; ++i) {\r\n        let symbol = closureSet[i].rule.rhs[closureSet[i].position];\r\n        for (let j = 0; j < _rules.length; ++j) {\r\n          if (_rules[j].lhs === symbol) {\r\n            let f = first(\r\n              closureSet[i].position + 1 < closureSet[i].rule.rhs.length ?\r\n              closureSet[i].rule.rhs[closureSet[i].position + 1] :\r\n              closureSet[i].lookahead);\r\n            for (let k = 0; k < f.length; ++k) {\r\n              let item = {\r\n                rule: _rules[j],\r\n                position: 0,\r\n                lookahead: f[k]\r\n              };\r\n              let newItem = true;\r\n              for (let m = 0; m < closureSet.length; ++m) {\r\n                if (itemsEqual(closureSet[m], item)) {\r\n                  newItem = false;\r\n                  break;\r\n                }\r\n              }\r\n              if (newItem) {\r\n                closureSet.push(item);\r\n                newItemAdded = true;\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return closureSet;\r\n  };\r\n\r\n  const goTo = (set, symbol) => {\r\n    let gotoSet = [];\r\n    for (let i = 0; i < set.length; ++i) {\r\n      if (set[i].rule.rhs[set[i].position] === symbol) {\r\n        gotoSet.push({\r\n          rule: set[i].rule,\r\n          position: set[i].position + 1,\r\n          lookahead: set[i].lookahead\r\n        });\r\n      }\r\n    }\r\n    return closure(gotoSet);\r\n  };\r\n\r\n  const scan = input => {\r\n    let s = input.trim().split(/\\s+/);\r\n    let r = [];\r\n    for (let i = 0; i < s.length; ++i) {\r\n      let t = _symbols.indexOf(s[i]);\r\n      if (!isTerminal(t)) {\r\n        return false;\r\n      }\r\n      r.push(t);\r\n    }\r\n    r.push(_endMarker);\r\n    return r;\r\n  };\r\n\r\n  const addRuleToParseTree = (tree, rule) => {\r\n    if (tree.symbol === rule.lhs && tree.children.length === 0) {\r\n      for (let i = 0; i < rule.rhs.length; ++i) {\r\n        tree.children.push({\r\n          symbol: rule.rhs[i],\r\n          children: []\r\n        });\r\n      }\r\n      return true;\r\n    }\r\n    for (let i = tree.children.length - 1; i >= 0; --i) {\r\n      if (addRuleToParseTree(tree.children[i], rule)) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  };\r\n\r\n  const getParseTree = () => {\r\n    let tree;\r\n    for (let i = _parseSteps.length - 1; i >= 0; --i) {\r\n      if (_parseSteps[i].action.type === 'reduce') {\r\n        if (tree === undefined) {\r\n          tree = {\r\n            symbol: _parseSteps[i].action.rule.lhs,\r\n            children: []\r\n          };\r\n        }\r\n        addRuleToParseTree(tree, _parseSteps[i].action.rule);\r\n      }\r\n    }\r\n    return tree;\r\n  };\r\n\r\n  const createCollection = () => {\r\n    _collection = [\r\n      closure([{\r\n        rule: _rules[0],\r\n        position: 0,\r\n        lookahead: _endMarker\r\n      }])\r\n    ];\r\n    let newSetAdded = true;\r\n    while (newSetAdded) {\r\n      newSetAdded = false;\r\n      for (let i = 0; i < _collection.length; ++i) {\r\n        for (let symbol = 1; symbol < _symbols.length - 1; ++symbol) {\r\n          let set = goTo(_collection[i], symbol);\r\n          if (set.length !== 0) {\r\n            let newSet = true;\r\n            for (let j = 0; j < _collection.length; ++j) {\r\n              if (setsEqual(_collection[j], set)) {\r\n                newSet = false;\r\n                break;\r\n              }\r\n            }\r\n            if (newSet) {\r\n              _collection.push(set);\r\n              newSetAdded = true;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const addActionToParseTable = (state, symbol, action) => {\r\n    if (_parseTable[state][symbol] === undefined) {\r\n      _parseTable[state][symbol] = action;\r\n    } else if (_parseTable[state][symbol].type === 'conflict') {\r\n      let newAction = true;\r\n      for (let i = 0; i < _parseTable[state][symbol].actions.length; ++i) {\r\n        if (actionsEqual(_parseTable[state][symbol].actions[i], action)) {\r\n          newAction = false;\r\n          break;\r\n        }\r\n      }\r\n      if (newAction) {\r\n        _parseTable[state][symbol].actions.push(action);\r\n      }\r\n    } else if (!actionsEqual(_parseTable[state][symbol], action)) {\r\n      _parseTable[state][symbol] = {\r\n        type: 'conflict',\r\n        actions: [_parseTable[state][symbol], action]\r\n      };\r\n      _parseTableHasConflict = true;\r\n    }\r\n  };\r\n\r\n  const createParseTable = () => {\r\n    _parseTable = new Array(_collection.length);\r\n    _parseTableHasConflict = false;\r\n    for (let i = 0; i < _collection.length; ++i) {\r\n      _parseTable[i] = new Array(_symbols.length);\r\n      for (let j = 0; j < _collection[i].length; ++j) {\r\n        let symbol = _collection[i][j].rule.rhs[_collection[i][j].position];\r\n        if (isTerminal(symbol)) {\r\n          let gotoSet = goTo(_collection[i], symbol);\r\n          for (let k = 0; k < _collection.length; ++k) {\r\n            if (setsEqual(_collection[k], gotoSet)) {\r\n              addActionToParseTable(i, symbol, {\r\n                type: 'shift',\r\n                state: k\r\n              });\r\n            }\r\n          }\r\n        }\r\n        if (_collection[i][j].position === _collection[i][j].rule.rhs.length) {\r\n          if (_collection[i][j].rule.lhs !== _startSymbol) {\r\n            addActionToParseTable(i, _collection[i][j].lookahead, {\r\n              type: 'reduce',\r\n              rule: _collection[i][j].rule\r\n            });\r\n          } else if (_collection[i][j].lookahead === _endMarker) {\r\n            _parseTable[i][_endMarker] = { type: 'accept' };\r\n          }\r\n        }\r\n      }\r\n      for (let symbol = 1; symbol < _symbolsTerminalOffset; ++symbol) {\r\n        let gotoSet = goTo(_collection[i], symbol);\r\n        for (let k = 0; k < _collection.length; ++k) {\r\n          if (setsEqual(_collection[k], gotoSet)) {\r\n            _parseTable[i][symbol] = k;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  // Public API for parsing\r\n\r\n  this.createParser = grammarStr => {\r\n    _symbols = [];\r\n    let lines = grammarStr.trim().split(/[\\r\\n]+/);\r\n    let rulesSymbols = [];\r\n    for (let i = 0; i < lines.length; ++i) {\r\n      rulesSymbols[i] = lines[i].trim().split(/\\s+/);\r\n      if (!_symbols.includes(rulesSymbols[i][0])) {\r\n        _symbols.push(rulesSymbols[i][0]);\r\n      }\r\n    }\r\n    _symbolsTerminalOffset = _symbols.length;\r\n    for (let i = 0; i < rulesSymbols.length; ++i) {\r\n      for (let j = 0; j < rulesSymbols[i].length; ++j) {\r\n        if (!_symbols.includes(rulesSymbols[i][j])) {\r\n          _symbols.push(rulesSymbols[i][j]);\r\n        }\r\n      }\r\n    }\r\n    _endMarker = _symbols.length;\r\n    _symbols.push('$');\r\n    _rules = [];\r\n    for (let i = 0; i < rulesSymbols.length; ++i) {\r\n      _rules[i] = {\r\n        index: i,\r\n        rhs: []\r\n      };\r\n      for (let j = 0; j < rulesSymbols[i].length; ++j) {\r\n        if (j === 0) {\r\n          _rules[i].lhs = _symbols.indexOf(rulesSymbols[i][j]);\r\n        } else {\r\n          _rules[i].rhs.push(_symbols.indexOf(rulesSymbols[i][j]));\r\n        }\r\n      }\r\n    }\r\n    createCollection();\r\n    createParseTable();\r\n  };\r\n  \r\n  this.parse = inputStr => {\r\n    if (_parseTable === undefined) {\r\n      return;\r\n    }\r\n    _parseSteps = [];\r\n    if (_parseTableHasConflict) {\r\n      _parseSteps.push({\r\n        stateStack: [],\r\n        symbolStack: [],\r\n        input: [],\r\n        action: {\r\n          type: 'error',\r\n          error: 'conflict in parse table'\r\n        }\r\n      });\r\n      return;\r\n    }\r\n    let input = scan(inputStr);\r\n    if (input === false) {\r\n      _parseSteps.push({\r\n        stateStack: [],\r\n        symbolStack: [],\r\n        input: [],\r\n        action: {\r\n          type: 'error',\r\n          error: 'syntax error'\r\n        }\r\n      });\r\n      return;\r\n    }\r\n    let stateStack = [0];\r\n    let symbolStack = [];\r\n    while (true) {\r\n      let action = _parseTable[top(stateStack)][input[0]];\r\n      if (action === undefined) {\r\n        action = {\r\n          type: 'error',\r\n          error: 'parse error'\r\n        };\r\n      }\r\n      \r\n      _parseSteps.push({\r\n        stateStack: stateStack.slice(0),\r\n        symbolStack: symbolStack.slice(0),\r\n        input: input.slice(0),\r\n        action: action\r\n      });\r\n      switch (action.type) {\r\n        case 'shift':\r\n          symbolStack.push(input.shift());\r\n          stateStack.push(action.state);\r\n          break;\r\n        case 'reduce':\r\n          for (let i = 0; i < action.rule.rhs.length; ++i) {\r\n            symbolStack.pop();\r\n            stateStack.pop();\r\n          }\r\n          symbolStack.push(action.rule.lhs);\r\n          stateStack.push(_parseTable[top(stateStack)][action.rule.lhs]);\r\n          break;\r\n        case 'accept':\r\n        case 'error':\r\n          return;\r\n      }\r\n    }\r\n  };\r\n\r\n  this.clear = () => {\r\n    _symbols =\r\n    _symbolsTerminalOffset =\r\n    _endMarker =\r\n    _rules =\r\n    _collection =\r\n    _parseTable =\r\n    _parseTableHasConflict =\r\n    _parseSteps =\r\n    undefined;\r\n  };\r\n\r\n  // Private functions for rendering\r\n\r\n  const actionStr = action => {\r\n    switch (action.type) {\r\n      case 'accept':\r\n        return 'acc';\r\n      case 'shift':\r\n        return 's' + action.state;\r\n      case 'reduce':\r\n        return 'r' + action.rule.index;\r\n      case 'error':\r\n        return 'error: ' + action.error;\r\n      case 'conflict':\r\n        let str = actionStr(action.actions[0]);\r\n        for (let state = 1; state < action.actions.length; ++state) {\r\n          str += ',' + actionStr(action.actions[state]);\r\n        }\r\n        return str;\r\n    }\r\n  };\r\n\r\n  const symbolClass = symbol => {\r\n    if (symbol === _startSymbol) {\r\n      return 'start-symbol';\r\n    }\r\n    if (symbol === _endMarker) {\r\n      return 'end-marker';\r\n    }\r\n    if (isNonTerminal(symbol)) {\r\n      return 'non-terminal';\r\n    }\r\n    if (isTerminal(symbol)) {\r\n      return 'terminal';\r\n    }\r\n  };\r\n\r\n  const arrowNode = () => (\r\n    document.createTextNode(' \\u2192 ')\r\n  );\r\n\r\n  const bulletNode = () => (\r\n    document.createTextNode('\\u2022')\r\n  );\r\n\r\n  const element = (tag, content, classes, attrs) => {\r\n    let node = document.createElement(tag);\r\n    let contentItems;\r\n    if (content === undefined) {\r\n      contentItems = [];\r\n    } else if (Array.isArray(content)) {\r\n      contentItems = content;\r\n    } else {\r\n      contentItems = [content];\r\n    }\r\n    contentItems.forEach(contentItem => {\r\n      if (typeof contentItem === 'object') {\r\n        node.appendChild(contentItem);\r\n      } else {\r\n        node.appendChild(document.createTextNode(contentItem));\r\n      }\r\n    });\r\n    if (classes !== undefined) {\r\n      if (Array.isArray(classes)) {\r\n        node.classList.add(...classes);\r\n      } else {\r\n        node.classList.add(classes);\r\n      }\r\n    }\r\n    if (attrs !== undefined) {\r\n      Object.keys(attrs).forEach(key => {\r\n        node[key] = attrs[key];\r\n      });\r\n    }\r\n    return node;\r\n  };\r\n\r\n  const symbolNode = (symbol, additionalClass) => {\r\n    let classes = [symbolClass(symbol)];\r\n    if (additionalClass !== undefined) {\r\n      classes.push(additionalClass);\r\n    }\r\n    return element('b', _symbols[symbol], classes);\r\n  };\r\n\r\n  const symbolsNodes = symbols => (\r\n    symbols.map(symbol => (\r\n      symbolNode(symbol)\r\n    ))\r\n  );\r\n\r\n  const ruleNodes = rule => [\r\n    symbolNode(rule.lhs),\r\n    arrowNode(),\r\n    ...symbolsNodes(rule.rhs)\r\n  ];\r\n\r\n  const itemNodes = item => {\r\n    let nodes = [\r\n      symbolNode(item.rule.lhs),\r\n      arrowNode()\r\n    ];\r\n    item.rule.rhs.forEach((rhsSymbol, i) => {\r\n      if (item.position === i) {\r\n        nodes.push(bulletNode());\r\n      }\r\n      nodes.push(symbolNode(rhsSymbol));\r\n    });\r\n    if (item.position === item.rule.rhs.length) {\r\n      nodes.push(bulletNode());\r\n    }\r\n    nodes.push(document.createTextNode(','));\r\n    nodes.push(symbolNode(item.lookahead, 'lookahead'));\r\n    return nodes;\r\n  };\r\n\r\n  const treeNode = tree => {\r\n    if (tree === undefined) {\r\n      return undefined;\r\n    }\r\n    let ulNode = document.createElement('ul');\r\n    let liNode = document.createElement('li');\r\n    liNode.classList.add(symbolClass(tree.symbol));\r\n    ulNode.appendChild(liNode);\r\n    let spanNode = document.createElement('span');\r\n    spanNode.appendChild(document.createTextNode(_symbols[tree.symbol]));\r\n    liNode.appendChild(spanNode);\r\n    tree.children.forEach(child => {\r\n      let node = treeNode(child);\r\n      if (node !== undefined) {\r\n        ulNode.appendChild(node);\r\n      }\r\n    });\r\n    return ulNode;\r\n  };\r\n\r\n  // Public API for rendering\r\n\r\n  this.renderGrammar = container => {\r\n    container.innerHTML = '';\r\n    if (_symbols === undefined) {\r\n      return;\r\n    }\r\n    let preNode = document.createElement('pre');\r\n    _rules.forEach((rule, i) => {\r\n      preNode.appendChild(element('i', i + ' '));\r\n      ruleNodes(rule).forEach(ruleNode => {\r\n        preNode.appendChild(ruleNode);\r\n      });\r\n      if (i !== _rules.length - 1) {\r\n        preNode.appendChild(document.createElement('br'));\r\n      }\r\n    });\r\n    container.appendChild(preNode);\r\n  };\r\n  \r\n  this.renderCollection = container => {\r\n    container.innerHTML = '';\r\n    if (_collection === undefined) {\r\n      return;\r\n    }\r\n    let preNode = document.createElement('pre');\r\n    _collection.forEach((set, setIndex) => {\r\n      set.forEach((item, itemIndex) => {\r\n        preNode.appendChild(element('i',\r\n          itemIndex === 0 ?\r\n          ['I', element('sub', setIndex), ' '] :\r\n          undefined\r\n        ));\r\n        itemNodes(item).forEach(itemNode => {\r\n          preNode.appendChild(itemNode);\r\n        });\r\n        if (itemIndex !== set.length - 1) {\r\n          preNode.appendChild(document.createElement('br'));\r\n        }\r\n      });\r\n      if (setIndex !== _collection.length - 1) {\r\n        preNode.appendChild(document.createElement('br'));\r\n        preNode.appendChild(document.createElement('br'));\r\n      }\r\n    });\r\n    container.appendChild(preNode);\r\n  };\r\n  \r\n  this.renderParseTable = container => {\r\n    container.innerHTML = '';\r\n    if (_parseTable === undefined) {\r\n      return;\r\n    }\r\n    let tableNode = document.createElement('table');\r\n    let theadNode = document.createElement('thead');\r\n    tableNode.appendChild(theadNode);\r\n    let theadTr1Node = document.createElement('tr');\r\n    theadNode.appendChild(theadTr1Node);\r\n    let theadTr2Node = document.createElement('tr');\r\n    theadNode.appendChild(theadTr2Node);\r\n    let tbodyNode = document.createElement('tbody');\r\n    tableNode.appendChild(tbodyNode);\r\n    theadTr1Node.appendChild(element('th', 'state', undefined, { rowSpan: 2 }));\r\n    theadTr1Node.appendChild(element('th', 'action', undefined, { colSpan: _symbols.length - _symbolsTerminalOffset }));\r\n    theadTr1Node.appendChild(element('th', 'goto', undefined, { colSpan: _symbolsTerminalOffset - 1 }));\r\n    for (let s = _symbolsTerminalOffset; s < _symbols.length; ++s) {\r\n      let classes = ['action'];\r\n      if (s === _endMarker) {\r\n        classes.push('end-marker');\r\n      }\r\n      theadTr2Node.appendChild(element('th', _symbols[s], classes));\r\n    }\r\n    for (let s = 1; s < _symbolsTerminalOffset; ++s) {\r\n      theadTr2Node.appendChild(element('th', _symbols[s], 'goto'));\r\n    }\r\n    for (let i = 0; i < _parseTable.length; ++i) {\r\n      let trNode = document.createElement('tr');\r\n      tbodyNode.appendChild(trNode);\r\n      trNode.appendChild(element('td', i));\r\n      for (let s = _symbolsTerminalOffset; s < _symbols.length; ++s) {\r\n        if (_parseTable[i][s] === undefined) {\r\n          trNode.appendChild(element('td', undefined, 'error'));\r\n        } else {\r\n          trNode.appendChild(element('td', actionStr(_parseTable[i][s]), _parseTable[i][s].type));\r\n        }\r\n      }\r\n      for (let s = 1; s < _symbolsTerminalOffset; ++s) {\r\n        trNode.appendChild(element('td', _parseTable[i][s]));\r\n      }\r\n    }\r\n    container.appendChild(tableNode);\r\n  };\r\n  \r\n  this.renderParseSteps = container => {\r\n    container.innerHTML = '';\r\n    if (_parseSteps === undefined) {\r\n      return;\r\n    }\r\n    let tableNode = document.createElement('table');\r\n    let theadNode = document.createElement('thead');\r\n    tableNode.appendChild(theadNode);\r\n    let theadTrNode = document.createElement('tr');\r\n    theadNode.appendChild(theadTrNode);\r\n    let tbodyNode = document.createElement('tbody');\r\n    tableNode.appendChild(tbodyNode);\r\n    theadTrNode.appendChild(element('th', 'state stack'));\r\n    theadTrNode.appendChild(element('th', 'symbol stack'));\r\n    theadTrNode.appendChild(element('th', 'input'));\r\n    theadTrNode.appendChild(element('th', 'action'));\r\n    theadTrNode.appendChild(element('th', 'output'));\r\n    _parseSteps.forEach(step => {\r\n      let trNode = document.createElement('tr');\r\n      tbodyNode.appendChild(trNode);\r\n      trNode.appendChild(element('td', document.createTextNode(step.stateStack.join(' '))));\r\n      trNode.appendChild(element('td', symbolsNodes(step.symbolStack)));\r\n      trNode.appendChild(element('td', symbolsNodes(step.input)));\r\n      trNode.appendChild(element('td', actionStr(step.action), step.action.type));\r\n      trNode.appendChild(element('td',\r\n        step.action.type === 'reduce' ?\r\n        ruleNodes(step.action.rule) :\r\n        undefined\r\n      ));\r\n    });\r\n    container.appendChild(tableNode);\r\n  };\r\n  \r\n  this.renderParseTree = container => {\r\n    container.innerHTML = '';\r\n    if (_parseSteps === undefined) {\r\n      return;\r\n    }\r\n    let ulNode = treeNode(getParseTree());\r\n    if (ulNode !== undefined) {\r\n      container.appendChild(ulNode);\r\n    }\r\n  };\r\n\r\n  // Public API for samples\r\n\r\n  this.sampleGrammar = () => (\r\n    \"S' G\\n\" +\r\n    'G E = E\\n' +\r\n    'G id\\n' +\r\n    'E E + T\\n' +\r\n    'E T\\n' +\r\n    'T T * id\\n' +\r\n    'T id'\r\n  );\r\n\r\n  this.sampleInput = () => (\r\n    'id = id + id * id'\r\n  );\r\n\r\n};\r\n","'use strict';\n\nimport 'normalize.css';\nimport '../styles/index.scss';\nimport Lr1ParserVis from './Lr1ParserVis';\n\ndocument.addEventListener('DOMContentLoaded', () => {\n\n  const lr1ParserVis = new Lr1ParserVis(document);\n\n  const grammarText = document.getElementById('grammar-text');\n  const inputText = document.getElementById('input-text');\n  const containers = {\n    grammar: document.getElementById('grammar-container'),\n    collection: document.getElementById('collection-container'),\n    parseTable: document.getElementById('parse-table-container'),\n    parseSteps: document.getElementById('parse-steps-container'),\n    parseTree: document.getElementById('parse-tree-container'),\n  };\n\n  const emptyContainers = () => {\n    Object.keys(containers).forEach(key => {\n      containers[key].innerHTML = '';\n    });\n  };\n\n  const createParser = () => {\n    emptyContainers();\n    lr1ParserVis.createParser(grammarText.value);\n    lr1ParserVis.renderGrammar(containers.grammar);\n    lr1ParserVis.renderCollection(containers.collection);\n    lr1ParserVis.renderParseTable(containers.parseTable);\n  };\n\n  const parse = () => {\n    lr1ParserVis.parse(inputText.value);\n    lr1ParserVis.renderParseSteps(containers.parseSteps);\n    lr1ParserVis.renderParseTree(containers.parseTree);\n  };\n\n  const showExample = () => {\n    grammarText.value = lr1ParserVis.sampleGrammar();\n    createParser();\n    inputText.value = lr1ParserVis.sampleInput();\n    parse();\n  };\n\n  const clear = () => {\n    grammarText.value = '';\n    inputText.value = '';\n    emptyContainers();\n    lr1ParserVis.clear();\n  };\n\n  document.getElementById('create-parser').addEventListener('click', createParser);\n  document.getElementById('parse').addEventListener('click', parse);\n  document.getElementById('show-example').addEventListener('click', showExample);\n  document.getElementById('clear').addEventListener('click', clear);\n\n});\n"],"names":["$60ee1455d5d07bc0$export$2e2bcd8739ae039","arr","len","length","i","arr2","Array","$49c94d0142231589$export$2e2bcd8739ae039","isArray","$19ba95953c0b3914$export$2e2bcd8739ae039","iter","Symbol","iterator","from","$c46dd327d17bb5e6$export$2e2bcd8739ae039","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","$29d17edd5e58a516$export$2e2bcd8739ae039","TypeError","$e0397ad0cf8bc90a$export$2e2bcd8739ae039","$6d587d8fec4dc32e$export$2e2bcd8739ae039","document","_symbols","_symbolsTerminalOffset","_endMarker","_rules","_collection","_parseTable","_parseTableHasConflict","_parseSteps","top","stack","itemsEqual","i1","i2","rule","position","lookahead","setsEqual","s1","s2","v","state","j","includes","push","actionsEqual","a1","a2","type","isTerminal","symbol","first","isTerminalOrEndMarker","f","lhs","rhs","fn","closure","set","closureSet","newItemAdded","k","item","newItem","m","goTo","gotoSet","addRuleToParseTree","tree","children","i3","addActionToParseTable","action","undefined","newAction","actions","this","createParser","grammarStr","lines","trim","split","rulesSymbols","i4","i5","index","j1","indexOf","newSetAdded","newSet","createCollection","symbol1","gotoSet1","k1","createParseTable","parse","inputStr","stateStack","symbolStack","input","error","s","r","t","scan","shift","pop","clear","actionStr","str","symbolClass","isNonTerminal","arrowNode","createTextNode","bulletNode","element","tag","content","classes","attrs","_classList","node","createElement","forEach","contentItem","appendChild","classList","add","apply","keys","key","symbolNode","additionalClass","symbolsNodes","symbols","map","ruleNodes","concat","treeNode","ulNode","liNode","spanNode","child","renderGrammar","container","innerHTML","preNode","ruleNode","renderCollection","setIndex","itemIndex","nodes","rhsSymbol","itemNodes","itemNode","renderParseTable","tableNode","theadNode","theadTr1Node","theadTr2Node","tbodyNode","rowSpan","colSpan","s3","trNode","s4","s5","renderParseSteps","theadTrNode","step","join","renderParseTree","getParseTree","sampleGrammar","sampleInput","addEventListener","lr1ParserVis","grammarText","getElementById","inputText","containers","grammar","collection","parseTable","parseSteps","parseTree","emptyContainers","value"],"version":3,"file":"index.3e0b972b.js.map"}